plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // QueryDSL
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
}

group = 'com.kangkrkr'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    //implementation 'org.springframework.boot:spring-boot-starter-amqp'
    //implementation 'org.springframework.boot:spring-boot-starter-batch'
    //implementation 'org.springframework.boot:spring-boot-starter-cache'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    //implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    //implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    //implementation 'org.springframework.boot:spring-boot-starter-quartz'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    //implementation 'org.springframework.boot:spring-boot-starter-websocket'
    //implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
    //implementation 'org.springframework.kafka:spring-kafka'
    //implementation 'org.springframework.session:spring-session-data-redis'
    //implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'com.querydsl:querydsl-jpa'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    runtimeOnly 'org.postgresql:postgresql'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    //testImplementation 'org.springframework.amqp:spring-rabbit-test'
    //testImplementation 'org.springframework.batch:spring-batch-test'
    //testImplementation 'org.springframework.kafka:spring-kafka-test'
    //testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    //testImplementation 'org.springframework.security:spring-security-test'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

// querydsl 추가 시작
def querydslDir = "src/main/generated"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

bootJar {
    layered()
}